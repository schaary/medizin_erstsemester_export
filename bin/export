#!/usr/bin/env ruby
# encoding: utf-8

$:.unshift File.expand_path('../../lib',__FILE__)

require 'awesome_print'
require 'dotenv'
require 'ruby-plsql'
require 'thor'

require 'account'

class Export < Thor
  desc 'mediziner','fetch the students of medicine'
  def mediziner
    Dotenv.load

    @accounts = []
    fetch type: 'mediziner'
    write_csv
  end

  desc 'zahnmediziner','fetch the dentistry students'
  def zahnmediziner
    Dotenv.load

    @accounts = []
    fetch type: 'zahnmediziner'
    write_csv
  end

private
  def connect
    plsql.connection = OCI8.new \
      ENV['IDM_USERNAME'],
      ENV['IDM_PASSWORD'],
      ENV['IDM_SID']
  end

  def write_csv
    @accounts.map do |account|
      puts "'#{account.firstname}';"+ 
           "'#{account.lastname}';"+
           "'#{account.date_of_birth}';"+
           "'#{account.mail}';"+
           "'#{account.uid}';"+
           "#{account.matrikel}"
    end
  end

  def fetch type: nil
    connect
    records = nil

    if 'zahnmediziner' == type
      records = plsql.zahnmed_erstsemester_view.all
    elsif 'mediziner' == type 
      records = plsql.medizin_erstsemester_view.all
    end

    records.map do |record|
      account = Account.new \
        firstname: record[:gname],
        lastname: record[:sname],
        date_of_birth: record[:geb_dat],
        matrikel: record[:matrikel],
        uid: record[:nkz],
        mail: record[:mail]

      @accounts << account
    end
    @accounts.freeze
  end
end

Export.start
